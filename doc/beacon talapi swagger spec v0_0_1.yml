swagger: '2.0'
# https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md

# This is your document metadata
info:
  version: "0.0.1"
  title: Beacon Talisman REST API
  description: |
    API for accessing Beacon Talisman recruitment software.
  termsOfService: http://talisman-recruitment.com/terms/
  contact:
    name: info@talisman-recruitment.com
  license:
    name: Proprietary. All rights reserved. Copyright (c) Beacon Computers, Dunstable, UK, 2016.
    url: http://talisman-recruitment.com/terms/
# host:  tal-api.herokuapp.com
host:  localhost:5000
basePath: /v1
schemes:
  - http
  - https
consumes:
  - application/json
  - application/xml
produces:
  - application/json
  - application/xml

# Proof of Concept scope
#
# 1) Candidate Registrations.
# Candidates registered via the App will be added to talisman database.
# KT1. Add new Keyapps candidate to Talisman new candidate queue.
#
# 2) Candidate Availability
# Candidates can update their availability using the App and this would then automatically update their available date within their candidate record in talisman.
# KT2. Submit candidate availability from Keyapps to Talisman.
#
# Note: calls from Talisman to Keyapps are not handle by TalAPI but include
#
# 1) Job Postings
# When we add a job to talisman we would like this to go directly to the app and show as a live job on our app. I know you can do this for broadbean but it is not something we currently use.
# TK1. Send Talisman new job to Keyapps. (Broadbean overlap?)
#
# 2) Job Closing – Similar to above and when a job status on talisman is set to filled / cancelled etc this updates the app so that it no longer shows as a live job requirement.
# TK2. Submit job closure from Talisman to Keyapps.
#
#
# Original email mentioned scope
#
# 1) Registration of Candidate from the App to Talisman.
#   Mandatory, optional fields
#   Field mapping - see other tab below
#   Will got to a queue of new candidates, similar to CV input queue, for dupe checking and semi-automated registration
# 2) Obtaining Compliance information for an authorized Candidate.
#   What fields?
# 3) Supplying availability information to Talisman for a Candidate. (Two way).
#   What format?
#   Talisman Format: type: available, unavailable, unsure; datetime range - allowing for AM|PM|Day|Night| other shifts
# 4) Obtaining booking information.
#   What fields?

# Paths

paths:
  /:
    get:
      summary: Get Talisman API version information
      description: ""
      responses:
        200:
          description: Successful response
          schema:
            properties:
              version:
                type: string
              api_version:
                type: integer

# KT1. Add new Keyapps candidate to Talisman new candidate queue.
  /candidateAdd:
    post:
      tags:
        - candidate
      summary: Register a new candidate from the App into Talisman candidate input queue
      description: ""
      operationId: addCandidate
      parameters:
        - in: body
          name: body
          description: candidate object that needs to be added
          required: true
          schema:
            $ref: "#/definitions/newCandidate"
      responses:
        "200":
          description: candidate queue entry response
          schema:
            $ref: "#/definitions/candidateQueueEntry"
        "405":
          description: invalid input
          schema:
            $ref: "#/definitions/errorModel"
        default:
          description: unexpected error
          schema:
            $ref: "#/definitions/errorModel"

# KT2. Submit candidate availability from Keyapps to Talisman.

  /candidateAvailability/{candNo}:
    post:
      tags:
        - candidate
      summary: Update candidate availability
      description: ""
      operationId: putCandidateAvailabilityById
      parameters:
        - in: path
          name: candNo
          description: ID of candidate to update
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: object containing availability information
          schema:
            $ref: "#/definitions/inputCandidateAvailability"
      responses:
        '200':
          description: success
        '404':
          description: candidate not found
        '400':
          description: invalid ID supplied
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'


# future

# 1a) Get information for a Talisman candidate by cand_no (mapping to cand_cand_no ? queue id?)
  /candidate/{candNo}:
    get:
      summary: Returns a Talisman candidate based on an ID
      description: ""
      operationId: getCandidateById
      parameters:
        - in: path
          name: candNo
          description: ID of candidate to fetch
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: candidate response
          schema:
            $ref: "#/definitions/candidate"
        '404':
          description: candidate not found
        '400':
          description: Invalid ID supplied
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'

# 2) Supplying Compliance information for an authorized Candidate to Talisman
  /candidateCompliance/{candNo}:
    post:
      tags:
        - candidate
      summary: Supply compliance information for a candidate
      description: ""
      operationId: putCandidateComplianceById
      parameters:
        - in: path
          name: candNo
          description: ID of candidate to update
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: object containing compliance information
          schema:
            $ref: "#/definitions/inputCandidateCompliance"
      responses:
        '200':
          description: success
        '404':
          description: candidate not found
        '400':
          description: Invalid ID supplied
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'


# Schema definitions

definitions:
  errorModel:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string

  newCandidate:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      email:
        type: string
        # pattern: '/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/' # HTML5 email tag spec
        pattern: '/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i' # http://www.regular-expressions.info/email.html
      salutation:
        type: string
      firstName:
        type: string
      middleNames:
        type: string
      lastName:
        type: string
      knownAs:
        type: string
      mobilePhone:
        type: string

  candidateQueueEntry:
    type: object
    properties:
      cand_queue_no:
        type: integer

  inputCandidateAvailability:
    type: object
    properties:
      cand_cand_no:
        type: integer
        format: int64
      cand_availability:
        type: string

  candidate:
    type: object
    properties:
      cand_cand_no:
        type: integer
        format: int64
      cand_surname:
        type: string

  inputCandidateCompliance:
    type: object
    properties:
      cand_cand_no:
        type: integer
        format: int64
      cand_passport:
        type: string
